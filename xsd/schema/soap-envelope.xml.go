// Code generated by xgen. DO NOT EDIT.

package schema

import (
	"encoding/xml"
)

// Envelope ...
type Envelope *Envelope

// Header ...
type Header *Header

// Body ...
type Body *Body

// MustUnderstand ...
type MustUnderstand bool

// Relay ...
type Relay bool

// Role ...
type Role string

// EncodingStyle ...
type EncodingStyle string

// Fault ...
type Fault *Fault

// Faultreason ...
type Faultreason struct {
	XMLName xml.Name      `xml:"faultreason"`
	Text    []*Reasontext `xml:"Text"`
}

// Reasontext ...
type Reasontext struct {
	XMLName     xml.Name `xml:"reasontext"`
	XmlLangAttr *Lang    `xml:"xml:lang,attr"`
	Value       string   `xml:",chardata"`
}

// Faultcode ...
type Faultcode struct {
	XMLName xml.Name `xml:"faultcode"`
	Value   xml.Name `xml:"Value"`
	Subcode *Subcode `xml:"Subcode"`
}

// FaultcodeEnum ...
type FaultcodeEnum xml.Name

// Subcode ...
type Subcode struct {
	XMLName xml.Name `xml:"subcode"`
	Value   xml.Name `xml:"Value"`
	Subcode *Subcode `xml:"Subcode"`
}

// Detail ...
type Detail struct {
	XMLName xml.Name `xml:"detail"`
}

// NotUnderstood ...
type NotUnderstood *NotUnderstoodType

// NotUnderstoodType ...
type NotUnderstoodType struct {
	QnameAttr xml.Name `xml:"qname,attr"`
}

// SupportedEnvType ...
type SupportedEnvType struct {
	QnameAttr xml.Name `xml:"qname,attr"`
}

// Upgrade ...
type Upgrade *UpgradeType

// UpgradeType ...
type UpgradeType struct {
	SupportedEnvelope []*SupportedEnvType `xml:"SupportedEnvelope"`
}
